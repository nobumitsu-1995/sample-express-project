{
  "ValueObjectの作成": {
    "prefix": "valueObject",
    "body": [
      "export default class ${TM_FILENAME_BASE} {",
      "  private readonly id: string",
      "",
      "  constructor(id: string) {",
      "    this.id = id",
      "  }",
      "",
      "  public get(): string {",
      "    return this.id",
      "  }",
      "}",
      "",
    ],
    "description": "ValueObjectの作成",
  },
  "エンティティの作成": {
    "prefix": "entity",
    "body": [
      "import type ${TM_FILENAME_BASE}Id from './${TM_FILENAME_BASE}Id'",
      "import type ${TM_FILENAME_BASE}Name from './${TM_FILENAME_BASE}Name'",
      "",
      "type ${TM_FILENAME_BASE}Props = {",
      "  id: ${TM_FILENAME_BASE}Id",
      "  name: ${TM_FILENAME_BASE}Name",
      "}",
      "",
      "export default class ${TM_FILENAME_BASE} {",
      "  public readonly id: ${TM_FILENAME_BASE}Id",
      "  public readonly name: ${TM_FILENAME_BASE}Name",
      "",
      "  constructor({ id, name }: ${TM_FILENAME_BASE}Props) {",
      "    this.id = id",
      "    this.name = name",
      "  }",
      "",
      "  public ${1:method}() {",
      "  }",
      "}",
      "",
      "",
    ],
    "description": "エンティティの作成",
  },
  "ドメインサービスの作成": {
    "prefix": "domainService",
    "body": [
      "import type { IUserRepository } from '@Domain/Models/${TM_FILENAME_BASE/Service//}s/I${TM_FILENAME_BASE/Service//}Repository'",
      "",
      "type ${TM_FILENAME_BASE}Props = {",
      "  ${TM_FILENAME_BASE/(.*)(Service)/${1:/camelcase}/}Repository: I${TM_FILENAME_BASE/Service//}Repository",
      "}",
      "export default class ${TM_FILENAME_BASE} {",
      "  private readonly ${TM_FILENAME_BASE/(.*)(Service)/${1:/camelcase}/}Repository: I${TM_FILENAME_BASE/Service//}Repository",
      "",
      "  constructor({ ${TM_FILENAME_BASE/(.*)(Service)/${1:/camelcase}/}Repository }: ${TM_FILENAME_BASE}Props) {",
      "    this.${TM_FILENAME_BASE/(.*)(Service)/${1:/camelcase}/}Repository = ${TM_FILENAME_BASE/(.*)(Service)/${1:/camelcase}/}Repository",
      "  }",
      "",
      "  public async ${1:method}() {",
      "  }",
      "}",
      "",
    ],
    "description": "ドメインサービスの作成",
  },
  "エラークラスの作成": {
    "prefix": "error",
    "body": [
      "const ${1:$TM_FILENAME_BASE} =",
      "  '${2:message}'",
      "",
      "export default class ${TM_FILENAME_BASE} extends Error {",
      "  statusCode: number",
      "  constructor() {",
      "    super(${1:$TM_FILENAME_BASE})",
      "    this.name = '${TM_FILENAME_BASE}'",
      "    this.statusCode = ${3:statusCode}",
      "  }",
      "}",
      "",
    ],
    "description": "エラークラスの作成",
  },
}
