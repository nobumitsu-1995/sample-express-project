{
  "Data Transfer Objectの作成": {
    "prefix": "dto",
    "body": [
      "type ${TM_FILENAME_BASE}Props = {",
      "  user: User",
      "}",
      "",
      "export default class ${TM_FILENAME_BASE} {",
      "  private readonly id: string",
      "  private readonly name: string",
      "",
      "  constructor({ user }: ${TM_FILENAME_BASE}Props) {",
      "    this.id = user.id.get()",
      "    this.name = user.name.get()",
      "  }",
      "}",
      "",
    ],
    "description": "Data Transfer Objectの作成",
  },
  "コマンドクラスの作成": {
    "prefix": "command",
    "body": [
      "type ${TM_FILENAME_BASE}Props = {",
      "  id: string",
      "}",
      "",
      "export default class ${TM_FILENAME_BASE} {",
      "  public readonly id: string",
      "  constructor({ id }: ${TM_FILENAME_BASE}Props) {",
      "    this.id = id",
      "  }",
      "}",
      "",
    ],
    "description": "コマンドクラスの作成",
  },
  "アプリケーションサービスの作成": {
    "prefix": "appService",
    "body": [
      "type ${TM_FILENAME_BASE}Props = {",
      "  ${TM_FILENAME_BASE/(.*)(ApplicationService)/${1:/camelcase}/}Repository: I${TM_FILENAME_BASE/ApplicationService//}Repository",
      "  ${TM_FILENAME_BASE/(.*)(ApplicationService)/${1:/camelcase}/}Service: ${TM_FILENAME_BASE/ApplicationService//}Service",
      "  ${TM_FILENAME_BASE/(.*)(ApplicationService)/${1:/camelcase}/}Factory: I${TM_FILENAME_BASE/ApplicationService//}Factory",
      "}",
      "",
      "export default class ${TM_FILENAME_BASE} {",
      "  private readonly ${TM_FILENAME_BASE/(.*)(ApplicationService)/${1:/camelcase}/}Repository: I${TM_FILENAME_BASE/ApplicationService//}Repository",
      "  private readonly ${TM_FILENAME_BASE/(.*)(ApplicationService)/${1:/camelcase}/}Service: ${TM_FILENAME_BASE/ApplicationService//}Service",
      "  private readonly ${TM_FILENAME_BASE/(.*)(ApplicationService)/${1:/camelcase}/}Factory: I${TM_FILENAME_BASE/ApplicationService//}Factory",
      "",
      "  constructor({",
      "    ${TM_FILENAME_BASE/(.*)(ApplicationService)/${1:/camelcase}/}Repository,",
      "    ${TM_FILENAME_BASE/(.*)(ApplicationService)/${1:/camelcase}/}Service,",
      "    ${TM_FILENAME_BASE/(.*)(ApplicationService)/${1:/camelcase}/}Factory,",
      "  }: ${TM_FILENAME_BASE}Props) {",
      "    this.${TM_FILENAME_BASE/(.*)(ApplicationService)/${1:/camelcase}/}Repository = ${TM_FILENAME_BASE/(.*)(ApplicationService)/${1:/camelcase}/}Repository",
      "    this.${TM_FILENAME_BASE/(.*)(ApplicationService)/${1:/camelcase}/}Service = ${TM_FILENAME_BASE/(.*)(ApplicationService)/${1:/camelcase}/}Service",
      "    this.${TM_FILENAME_BASE/(.*)(ApplicationService)/${1:/camelcase}/}Factory = ${TM_FILENAME_BASE/(.*)(ApplicationService)/${1:/camelcase}/}Factory",
      "  }",
      "",
      "  public async ${1:method}(): Promise<${TM_FILENAME_BASE/ApplicationService//}> {",
      "  }",
      "}",
      "",
    ],
    "description": "アプリケーションサービスの作成",
  },
}
